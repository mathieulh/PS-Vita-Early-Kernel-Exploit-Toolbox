#ifndef __OFFSETS_H__
#define KERNEL_RW									0x6020D006
#define KERNEL_RX									0x1020D005

#if defined(FW_0945)
#define SYSMEMBASE									0x240000
#define SYSCALLTABLE								0x3FC000
#define sceKernelAllocMemBlockForDriver_offset 		(SYSMEMBASE + 0x8A40+1)
#define sceKernelGetMemBlockBaseForDriver_offset 	(SYSMEMBASE + 0x1A154+1)
#define sceKernelMemcpyUserToKernel_offset 			(SYSMEMBASE + 0x64B8)
#define sceKernelMemcpyKernelToUser_offset 			(SYSMEMBASE + 0x64AC)
#define sceKernelCpuUnrestrictedMemcpy_offset 		(SYSMEMBASE + 0x39d08)

struct SceKernelAllocMemKernelBlockOpt {
    SceInt32 size; 
    SceInt32 unk;
    SceInt32 attr;
    SceInt32 unk2;
    SceInt32 paddr;
    SceInt32 align;
    SceInt32 unk3[3];
    SceInt32 processid;
};
#elif defined(FW_0995)
#define SYSMEMBASE									0x380000
#define SYSCALLTABLE								0xD70000
#define sceKernelAllocMemBlockForDriver_offset 		0x3BCB7C
#define sceKernelGetMemBlockBaseForDriver_offset 	0x3BCB4C
#define sceKernelMemcpyUserToKernel_offset 			0x3BCB68
#define sceKernelMemcpyKernelToUser_offset 			0x3BCAEC
#define sceKernelCpuUnrestrictedMemcpy_offset 		0x3BD0D8

struct SceKernelAllocMemKernelBlockOpt {
    SceInt32 size; 
    SceInt32 unk;
    SceInt32 attr;
    SceInt32 unk2;
    SceInt32 paddr;
    SceInt32 align;
    SceInt32 unk3[3];
    SceInt32 processid;
};
#elif defined(FW_150)
#define SYSCALLTABLE 								0x10AC000
#define sceKernelAllocMemBlockForDriver_offset 		0x4ACA50
#define sceKernelGetMemBlockBaseForDriver_offset 	0x4ACA18
#define sceKernelMemcpyUserToKernel_offset 			0x4ACA38 
#define sceKernelMemcpyKernelToUser_offset 			0x4AC9A4
#define sceKernelCpuUnrestrictedMemcpy_offset 		0x4ACF10

struct SceKernelAllocMemKernelBlockOpt {
    uint32_t size; // 0x34
    uint32_t unk;
    uint32_t attr;
    uint32_t unk2;
    uint32_t paddr;
    uint32_t align;
    uint32_t unk3[3];
    uint32_t processid;
    uint32_t unk4[3];
};
#endif

#endif //__OFFSETS_H__